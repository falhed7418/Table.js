Schedule.prototype.Elements = [];Schedule.prototype.ElementKeys = [];Schedule.prototype.Template = null; Schedule.prototype.View = null; function Schedule(elements,elementKeys,templateUrl){ Schedule.prototype.Elements = elements;Schedule.prototype.ElementKeys = elementKeys; this.loadTemplate(templateUrl);} Schedule.prototype.loadTemplate = function(url){var httpRequest;if(window.XMLHttpRequest){httpRequest = new XMLHttpRequest();}else if(window.ActiveXObject){httpRequest = new ActiveXObject(\"Microsoft.XMLHTTP\");} httpRequest.onreadystatechange = function(){if(httpRequest.readyState === 4){Schedule.prototype.Template = httpRequest.responseText; Schedule.prototype.parseTemplate(Schedule.prototype.Template,Schedule.prototype.Elements,Schedule.prototype.ElementKeys);}else{}}; httpRequest.open(\"GET\",url,false);httpRequest.setRequestHeader(\'Content-Type\',\'application/x-www-form-urlencoded\');httpRequest.send(null);} Schedule.prototype.parseTemplate = function(template,elements,elementKeys){ var pos,lastpos;var types = [];for(var i = 0;i < template.length;i){pos = template.indexOf(\'{{\',i); if(pos != -1){pos += 2;lastpos = template.indexOf(\'}}\',i); types.push(template.substr(pos,template.length - pos -(template.length - lastpos))); i = lastpos + 2;}else{i = template.length;}} var classType,repeatSection;for(var i = 0;i < template.length;i){pos = template.indexOf(\'class=\"\') if(pos != -1){pos += 7;lastpos = template.indexOf(\'\"\',pos); var cssClasses = template.substr(pos,template.length - pos -(template.length - lastpos));var index = cssClasses.indexOf(\'repeat\'); if(index != -1){ template = template.substr(0,pos)+ cssClasses.replace(\'repeat\',\'\')+ template.substr(pos + cssClasses.length); var beginn = template.substr(0,pos).lastIndexOf(\'<\')+ 1;var laenge = template.substr(beginn,template.length - beginn).indexOf(\' \');var tag = template.substr(beginn,laenge); laenge = template.substr(beginn,template.length - beginn).indexOf(\'</\' + tag + \'>\')+ 4 + tag.length; repeatSection ={\'start\' :beginn - 1,\'length\' :laenge,\'text\' :template.substr(beginn - 1,laenge)};  i += lastpos.length;}}else{i = template.length;}} var view;if(repeatSection != null){view = template.substr(0,repeatSection.start)+ template.substr(repeatSection.start + repeatSection.length); var pos = repeatSection.start;for(var i = 0;i < elements.length;i++){var part = repeatSection.text; for(var index = 0;index < elementKeys.length;index++){part = part.replace(\'{{\' + elementKeys[index] + \'}}\',elements[i][elementKeys[index]]);} view = view.substr(0,pos)+ part + view.substr(pos); pos += part.length;}} Schedule.prototype.View = view; return Schedule.prototype.View;} Schedule.prototype.search = function(phrase,property){var result = []; if(property != null){ for(var i = 0;i < Schedule.prototype.Elements.length;i++){var index = Schedule.prototype.Elements[i][property].search(phrase); if(index != -1){result.push(Schedule.prototype.Elements[i]);}}}else{ for(var i = 0;i < Schedule.prototype.Elements.length;i++){for(var u = 0;u < Schedule.prototype.ElementKeys.length;u++){var index = Schedule.prototype.Elements[i][Schedule.prototype.ElementKeys[u]].search(phrase); if(index != -1){result.push(Schedule.prototype.Elements[i]); u += Schedule.prototype.ElementKeys.length;}}}} return result;} Schedule.prototype.redrawView = function(elements){  return Schedule.prototype.parseTemplate(Schedule.prototype.Template,elements,Schedule.prototype.ElementKeys);} Schedule.prototype.sortDateAsc = function(elements,dateProperty){if(dateProperty != null){var item;var sortFinished = false; while(!sortFinished){sortFinished = true; for(var i = 0;i < elements.length && i + 1 < elements.length;i++){if(elements[i][dateProperty] > elements[i + 1][dateProperty]){item = elements[i];elements[i] = elements[i + 1];elements[i + 1] = item; sortFinished = false;}}} return elements;}} Schedule.prototype.sortDateDesc = function(elements,dateProperty){if(dateProperty != null){var item;var sortFinished = false; while(!sortFinished){sortFinished = true; for(var i = 0;i < elements.length && i + 1 < elements.length;i++){if(elements[i][dateProperty] < elements[i + 1][dateProperty]){item = elements[i];elements[i] = elements[i + 1];elements[i + 1] = item; sortFinished = false;}}} return elements;}} Schedule.prototype.sortTimeAsc = function(elements,timeProperty){if(timeProperty != null){var item;var sortFinished = false; while(!sortFinished){sortFinished = true; for(var i = 0;i < elements.length && i + 1 < elements.length;i++){if(elements[i][timeProperty] > elements[i + 1][timeProperty]){item = elements[i];elements[i] = elements[i + 1];elements[i + 1] = item; sortFinished = false;}}} return elements;}} Schedule.prototype.sortTimeDesc = function(elements,timeProperty){if(timeProperty != null){var item;var sortFinished = false; while(!sortFinished){sortFinished = true; for(var i = 0;i < elements.length && i + 1 < elements.length;i++){if(elements[i][timeProperty] < elements[i + 1][timeProperty]){item = elements[i];elements[i] = elements[i + 1];elements[i + 1] = item; sortFinished = false;}}} return elements;}}